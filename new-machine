#!/usr/bin/perl -w

# Quick hack to make creating openvz machines easier

# USAGE: just run this script: ./new-machine
# It will prompt you for all the information it needs.


use strict;
use File::Basename;

print "\n";
my @ctids = sort map { basename($_) } </vz/root/*>;
my $ctid;
for(;;) {
	$ctid = readln("ctid for the new machine", $ctids[$#ctids] + 1);
	if(grep { $_ eq $ctid } @ctids) {
		print "$ctid is already used";
	} elsif($ctid <= 100) {
		print return "$ctid must be larger than 100";
	} else {
		last;
	}
}

print "\n";
my $hostname = readln("hostname fqdn");

print "\n";
my @templates = sort map { basename($_, ".tar.gz") } </vz/template/cache/*>;
my $template = choose(\@templates, $templates[0]);

print "\n";
my @configs = sort map { s/^ve-//; $_ } map { basename($_, ".conf-sample") } </etc/vz/conf/ve-*.conf-sample>;
my $conf = choose(\@configs, find("basic", @configs));

print "\n";
my $ipadd = readln("ip address", "192.168.1.$ctid");

print "\n";
my $name = readln("container name (optional)", $hostname ? longest_string(split /\./, $hostname) : undef);

print "\n";
my $nameserver = readln("nameservers", join(", ", read_resolv()));

print "\n";
my $diskspace = readln("disk space (soft:hard quota)", "10G:10G");


my $create = "vzctl create $ctid --ostemplate $template --conf $conf --ipadd $ipadd";
$create .= " --hostname $hostname" if $hostname;

my $set;
if($name || $nameserver || $diskspace) {
	$set = "vzctl set $ctid";
	$set .= " --name $name" if $name;
	$set .= " --nameserver \"$nameserver\"" if $nameserver;
	$set .= " --diskspace $diskspace" if $diskspace;
	$set .= " --save";
}

print "$create\n";
print "$set\n" if $set;

exit 0;


sub longest_string {
	my $str = '';
	for(@_) {
		$str = $_ if length($_) > length($str);
	}
	return $str
}

sub find {
	my $str = shift;
	for(@_) {
		return $_ if $_ =~ /$str/;
	}
	return undef;
}

sub read_resolv {
	my @nameservers;
	if(open FH, "</etc/resolv.conf") {
		while(<FH>) {
			push @nameservers, $1 if /nameserver (\S+)/;
		}
		close FH;
	}
	return @nameservers;
}

sub choose {
	my $choices = shift;
	my $default = shift;

	my $defnum = undef;
	for(my $i=1; $i<=@$choices; $i++) {
		print "$i) " . $choices->[$i-1] . "\n";
		$defnum = $i if defined $default && $choices->[$i-1] eq $default;
	}

	for(;;) {
		my $result = readln("select one", $defnum);
		if($result =~ /^\d+$/ && $result >= 1 && $result <= @$choices) {
			return $choices->[$result-1];
		}
		print "Please enter a number from 1 to " . @$choices;
	}
}


sub readln {
	my $prompt = shift;
	my $suggestion = shift;

	my $result = "";

	print $prompt;
	print " [$suggestion]" if defined $suggestion;
	print ": ";
	$result = <STDIN>;
	chomp $result;
	$result = $suggestion if $result eq "";

	return $result;
}

